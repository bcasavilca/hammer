//+------------------------------------------------------------------+
//|                                      Hammer pattern detector.mq5 |
//|                                  Copyright 2023, MetaQuotes Ltd. |
//|                                             https://www.mql5.com |
//+------------------------------------------------------------------+
void OnTick()
{
   getHammer(
   0.07, // 7% size's candle
   0.7   // 70% size's candle
   );
}

int getHammer(double smallShadowRatio, double longShadowRatio)
{
   MqlRates rates[];
   ArraySetAsSeries(rates, true);
   
   if (CopyRates(_Symbol, PERIOD_CURRENT, 1, 1, rates) > 0)
   {
      datetime time = rates[0].time;
      double open = rates[0].open;
      double high = rates[0].high;
      double low = rates[0].low;
      double close = rates[0].close;
      double candleSize = high - low;
      
   if(open<close) //candle de alta
     {
      if(high-close < candleSize*smallShadowRatio)//se sommbra superior é menor que 7%
        {
         if(open-low>candleSize*longShadowRatio) //se sommbra inferior é maior que 70%
            createObj(time,low,217, clrGreen,"Hammer");
           {
            return 1;
           }
        }
     }
   if(open>close) //candle de baixa
     {
      if(high-open<candleSize*smallShadowRatio)
        {
         if(close-low>candleSize*longShadowRatio)
            createObj(time,high,218,clrGreen,"Hammer");
           {
            return 1;
           }
        }
     }
   if(open<close) //candle de alta
     {
      if(open-low < candleSize*smallShadowRatio)
        {
         if(high-close>candleSize*longShadowRatio)
            createObj(time,low,217, clrRed,"Inverted Hammer");
           {
            return -1;
           }
        }
     }
   if(open>close) //candle de baixa
     {
      if(close-low < candleSize*smallShadowRatio)
        {
         if(high-open>candleSize*longShadowRatio)
            createObj(time,high,218, clrRed,"Inverted Hammer");
           {
            return -1;
           }
        }
     }
   return 0;
   }
    return 0;
   }
  
     
   

void createObj(datetime time, double price, int arrawCode, color clr, string txt)
  {
   string objName=" ";
   StringConcatenate(objName, "Signal@",time, "at",DoubleToString(price,_Digits),"(",arrawCode,")");
   if(ObjectCreate(0,objName,OBJ_ARROW,0,time,price))
     {
      ObjectSetInteger(0,objName,OBJPROP_ARROWCODE,arrawCode);
      ObjectSetInteger(0,objName,OBJPROP_COLOR,clr);
      if(clr==clrGreen)
         ObjectSetInteger(0,objName,OBJPROP_ANCHOR,ANCHOR_TOP);
      if(clr==clrRed)
         ObjectSetInteger(0,objName,OBJPROP_ANCHOR,ANCHOR_BOTTOM);
     }
   string candleName=objName+txt;
   if(ObjectCreate(0,candleName,OBJ_TEXT,0,time,price))
     {
      ObjectSetString(0,candleName,OBJPROP_TEXT," "+txt);
      ObjectSetInteger(0,candleName,OBJPROP_COLOR,clr);
     }
  }
